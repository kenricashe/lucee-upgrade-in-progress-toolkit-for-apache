<IfDefine LUCEE_UPGRADE_IN_PROGRESS>

	# Load IP bypass configuration
	Include /etc/apache2/lucee-upgrade-in-progress/ip-allow.conf

	# Conditional Lucee proxy mappings for allowlisted IPs only
	Include /etc/apache2/lucee-upgrade-in-progress/lucee-proxy-for-allowed-ip.conf
	
	# Files directive is needed even when each site has a <Directory> directive
	# for its docroot because the RewriteRule with [L] circumvents that.
	<Files "lucee-upgrade-in-progress.html">
		Require all granted
	</Files>

	# For bypass IPs: normal functionality (no rewrite)
	# For all other IPs: show upgrade page
	<IfModule mod_rewrite.c>
		RewriteEngine On
		# Skip rewrite if environment variable is set (allowed IPs)
		RewriteCond %{ENV:LUCEE_UPGRADE_BYPASS} !=1
		# [L] flag is required to prevent rule chaining and ensure 
		# definitive handling of all Lucee requests during upgrade mode.
		RewriteRule ^.*\.(cfm|cfml|cfs|cfc)(/.*)?$ /lucee-upgrade-in-progress.html [L]
	</IfModule>
	
	<IfModule headers_module>
		Header set Cache-Control "no-store, no-cache, must-revalidate"
		# Status page detects upgrade mode via HEAD request
		Header set X-Lucee-Upgrade "1"
	</IfModule>
	
	<IfDefine LUCEE_SITE_HAS_CF_404>
		# For sites that use a Lucee script to handle 404 Not Found,
		# when proxy to Lucee is disabled, this is needed:
		# But only for IPs not in the allowlist
		<IfModule mod_setenvif.c>
			<If "%{ENV:LUCEE_UPGRADE_BYPASS} != '1'">
				ErrorDocument 404 /lucee-upgrade-in-progress.html
			</If>
		</IfModule>
	</IfDefine>

</IfDefine>
